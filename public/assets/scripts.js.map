{"version":3,"file":"scripts.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Window.svelte","../../src/Desktop.svelte","../../src/Clock.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\timport { createEventDispatcher, onDestroy } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\tconst close = () => dispatch('close');\n\n  let modal;\n\n  let window = {\n    top: 32,\n    left: 32,\n    moving: false,\n  };\n\n  function start() {\n    window.moving = true;\n  }\n  function stop() {\n    window.moving = false;\n    if (window.left <= 0) { window.left = 0 }\n    if (window.top <= 0) { window.top = 0 }\n  }\n\n  function move(e) {\n    if (window.moving) {\n      window.left += e.movementX;\n      window.top += e.movementY;\n    }\n  }\n\n\tconst handle_keydown = e => {\n\t\tif (e.key === 'Escape') {\n\t\t\tclose();\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.key === 'Tab') {\n\t\t\t// trap focus\n      const nodes = modal.querySelectorAll('*');\n\t\t\tconst tabbable = Array.from(nodes).filter(n => n.tabIndex >= 0);\n\n\t\t\tlet index = tabbable.indexOf(document.activeElement);\n\t\t\tif (index === -1 && e.shiftKey) index = 0;\n\n\t\t\tindex += tabbable.length + (e.shiftKey ? -1 : 1);\n\t\t\tindex %= tabbable.length;\n\n\t\t\ttabbable[index].focus();\n\t\t\te.preventDefault();\n\t\t}\n\t};\n\n\tconst previously_focused = typeof document !== 'undefined' && document.activeElement;\n\n\tif (previously_focused) {\n\t\tonDestroy(() => {\n\t\t\tpreviously_focused.focus();\n\t\t});\n  }\n  export let title =\"title\";\n</script>\n\n<style>\n  .window {\n    position: absolute;\n    user-select: none;\n    z-index: 5;\n    max-width: 20rem;\n    background: var(--alt);\n    border-style: solid;\n    border: 2px solid var(--primary);\n    box-shadow: 2px 2px 0 0 var(--primary);\n  }\n\n  .window-header {\n    display: flex;\n    flex-direction: row;\n    padding: 0.375rem;\n    width: 100%;\n    border-bottom: 2px solid var(--primary);\n    background-color: var(--alt);\n    background-image: linear-gradient(\n      var(--primary) 0.125rem,\n      transparent 0.125rem\n    );\n    background-size: 100% 0.375rem;\n    background-position: 0 1.25rem;\n    background-clip: content-box;\n  }\n  .window-close {\n    flex: 0 0 auto;\n    border-radius: 0;\n    border: 2px solid var(--primary);\n    height: 1.5rem;\n    width: 1.5rem;\n    line-height: 0;\n    margin: 0 0.375rem 0 0rem;\n    background: var(--alt);\n    box-shadow: 0.125rem 0 0 0.25rem var(--alt), -0.125rem 0 0 0.25rem var(--alt);\n    font-size: 0;\n  }\n\n  .window-close:hover,\n  .window-close:focus {\n  background: linear-gradient(45deg, transparent 0%,transparent 45%,var(--primary) 45%,var(--primary) 55%,transparent 55%,transparent 100%),\n    linear-gradient(135deg, var(--alt) 0%,var(--alt) 45%,var(--primary) 45%,var(--primary) 55%,var(--alt) 55%,var(--alt) 100%);\n  }\n\n  .window-title {\n    flex: 1 1 100%;\n    display: flex;\n    padding-right: 2rem;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n  .window-title h2 {\n    flex: 0 1 auto;\n    background: var(--alt);\n    padding: 0 0.75rem;\n    font-size: 1.25rem;\n  }\n  .window-main {\n    padding: 1rem;\n  }\n</style>\n\n<svelte:window on:keydown={handle_keydown} on:mouseup={stop} on:mousemove={move}/>\n\n<div class=\"window\"  style=\"left:{window.left}px; top:{window.top}px;\" bind:this={modal}>\n  <header class=\"window-header\" on:mousedown={start} >\n    <button type=\"button\" class=\"window-close\" on:click={close}>close modal</button>\n    <div class=\"window-title\">\n      <h2>{title}</h2>\n    </div>\n  </header>\n  <section class=\"window-main\">\n    <slot></slot>\n  </section>\n</div>\n","<script>\nimport Window from \"./Window.svelte\";\n  let windowMac = true;\n  let windowTrash = false;\n\n  function closeWindows() {\n    windowMac = false;\n    windowTrash = false;\n  }\n\n</script>\n\n<section class=\"window-layer\">\n{#if windowMac}\n  <Window title=\"Pez HD\" on:close=\"{() => windowMac = false}\" >\n    <h1>Pezillionaire Interactive Manufacturing</h1>\n  </Window>\n{/if}\n{#if windowTrash}\n  <Window title=\"Garbage\" on:close=\"{() => windowTrash = false}\" >\n    <p>Nothing in here yet…</p>\n  </Window>\n{/if}\n</section>\n<section class=\"icon-layer\">\n  <button type=\"button\" class=\"icon mac\" class:open=\"{windowMac}\" on:click=\"{() => windowMac = true}\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -0.5 48 62\" shape-rendering=\"crispEdges\">\n      <path class=\"svg-prime\" d=\"M2 0h44M2 1h44M0 2h2m44 0h2M0 3h2m44 0h2M0 4h2m44 0h2M0 5h2m44 0h2M0 6h2m6 0h32m6 0h2M0 7h2m6 0h32m6 0h2M0 8h2m4 0h2m32 0h2m4 0h2M0 9h2m4 0h2m32 0h2m4 0h2M0 10h2m4 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m8 0h2m4 0h2M0 11h2m4 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m8 0h2m4 0h2M0 12h2m4 0h2m32 0h2m4 0h2M0 13h2m4 0h2m32 0h2m4 0h2M0 14h2m4 0h2m2 0h2m2 0h2m2 0h2m2 0h2m16 0h2m4 0h2M0 15h2m4 0h2m2 0h2m2 0h2m2 0h2m2 0h2m16 0h2m4 0h2M0 16h2m4 0h2m32 0h2m4 0h2M0 17h2m4 0h2m32 0h2m4 0h2M0 18h2m4 0h2m2 0h2m2 0h2m24 0h2m4 0h2M0 19h2m4 0h2m2 0h2m2 0h2m24 0h2m4 0h2M0 20h2m4 0h2m32 0h2m4 0h2M0 21h2m4 0h2m32 0h2m4 0h2M0 22h2m4 0h2m2 0h2m2 0h2m24 0h2m4 0h2M0 23h2m4 0h2m2 0h2m2 0h2m24 0h2m4 0h2M0 24h2m4 0h2m32 0h2m4 0h2M0 25h2m4 0h2m32 0h2m4 0h2M0 26h2m4 0h2m2 0h2m2 0h2m2 0h2m20 0h2m4 0h2M0 27h2m4 0h2m2 0h2m2 0h2m2 0h2m20 0h2m4 0h2M0 28h2m4 0h2m32 0h2m4 0h2M0 29h2m4 0h2m32 0h2m4 0h2M0 30h2m4 0h2m32 0h2m4 0h2M0 31h2m4 0h2m32 0h2m4 0h2M0 32h2m6 0h32m6 0h2M0 33h2m6 0h32m6 0h2M0 34h2m44 0h2M0 35h2m44 0h2M0 36h2m44 0h2M0 37h2m44 0h2M0 38h2m44 0h2M0 39h2m44 0h2M0 40h2m44 0h2M0 41h2m44 0h2M0 42h2m22 0h16m6 0h2M0 43h2m22 0h16m6 0h2M0 44h2m44 0h2M0 45h2m44 0h2M0 46h2m44 0h2M0 47h2m44 0h2M0 48h2m44 0h2M0 49h2m44 0h2M0 50h2m44 0h2M0 51h2m44 0h2M2 52h46M2 53h46M2 54h2m40 0h2M2 55h2m40 0h2M2 56h2m40 0h2M2 57h2m40 0h2M2 58h2m40 0h2M2 59h2m40 0h2M2 60h44M2 61h44\"/>\n      <path class=\"svg-alt\" d=\"M2 2h44M2 3h44M2 4h44M2 5h44M2 6h6m32 0h6M2 7h6m32 0h6M2 8h4m2 0h32m2 0h4M2 9h4m2 0h32m2 0h4M2 10h4m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h8m2 0h4M2 11h4m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h2m2 0h8m2 0h4M2 12h4m2 0h32m2 0h4M2 13h4m2 0h32m2 0h4M2 14h4m2 0h2m2 0h2m2 0h2m2 0h2m2 0h16m2 0h4M2 15h4m2 0h2m2 0h2m2 0h2m2 0h2m2 0h16m2 0h4M2 16h4m2 0h32m2 0h4M2 17h4m2 0h32m2 0h4M2 18h4m2 0h2m2 0h2m2 0h24m2 0h4M2 19h4m2 0h2m2 0h2m2 0h24m2 0h4M2 20h4m2 0h32m2 0h4M2 21h4m2 0h32m2 0h4M2 22h4m2 0h2m2 0h2m2 0h24m2 0h4M2 23h4m2 0h2m2 0h2m2 0h24m2 0h4M2 24h4m2 0h32m2 0h4M2 25h4m2 0h32m2 0h4M2 26h4m2 0h2m2 0h2m2 0h2m2 0h20m2 0h4M2 27h4m2 0h2m2 0h2m2 0h2m2 0h20m2 0h4M2 28h4m2 0h32m2 0h4M2 29h4m2 0h32m2 0h4M2 30h4m2 0h32m2 0h4M2 31h4m2 0h32m2 0h4M2 32h6m32 0h6M2 33h6m32 0h6M2 34h44M2 35h44M2 36h44M2 37h44M2 38h44M2 39h44M2 40h44M2 41h44M2 42h22m16 0h6M2 43h22m16 0h6M2 44h44M2 45h44M2 46h44M2 47h44M2 48h44M2 49h44M2 50h44M2 51h44M4 54h40M4 55h40M4 56h40M4 57h40M4 58h40M4 59h40\"/>\n    </svg>\n    <span>Pez HD</span>\n  </button>\n  <button type=\"button\" class=\"icon trash\" class:open=\"{windowTrash}\" on:click=\"{() => windowTrash = true}\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -0.5 44 64\" shape-rendering=\"crispEdges\">\n      <path class=\"svg-prime\" d=\"M16 0h12M16 1h12M14 2h2m12 0h2M14 3h2m12 0h2M2 4h40M2 5h40M0 6h2m40 0h2M0 7h2m40 0h2M0 8h44M0 9h44M2 10h2m36 0h2M2 11h2m36 0h2M2 12h2m36 0h2M2 13h2m36 0h2M2 14h2m4 0h2m6 0h2m6 0h2m6 0h2m6 0h2M2 15h2m4 0h2m6 0h2m6 0h2m6 0h2m6 0h2M2 16h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 17h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 18h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 19h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 20h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 21h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 22h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 23h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 24h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 25h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 26h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 27h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 28h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 29h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 30h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 31h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 32h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 33h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 34h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 35h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 36h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 37h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 38h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 39h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 40h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 41h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 42h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 43h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 44h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 45h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 46h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 47h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 48h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 49h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 50h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 51h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 52h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 53h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 54h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 55h2m6 0h2m6 0h2m6 0h2m6 0h2m4 0h2M2 56h2m4 0h2m6 0h2m6 0h2m6 0h2m6 0h2M2 57h2m4 0h2m6 0h2m6 0h2m6 0h2m6 0h2M2 58h2m36 0h2M2 59h2m36 0h2M2 60h2m36 0h2M2 61h2m36 0h2M4 62h36M4 63h36\"/>\n      <path class=\"svg-alt\" d=\"M16 2h12M16 3h12M2 6h40M2 7h40M4 10h36M4 11h36M4 12h36M4 13h36M4 14h4m2 0h6m2 0h6m2 0h6m2 0h6M4 15h4m2 0h6m2 0h6m2 0h6m2 0h6M4 16h6m2 0h6m2 0h6m2 0h6m2 0h4M4 17h6m2 0h6m2 0h6m2 0h6m2 0h4M4 18h6m2 0h6m2 0h6m2 0h6m2 0h4M4 19h6m2 0h6m2 0h6m2 0h6m2 0h4M4 20h6m2 0h6m2 0h6m2 0h6m2 0h4M4 21h6m2 0h6m2 0h6m2 0h6m2 0h4M4 22h6m2 0h6m2 0h6m2 0h6m2 0h4M4 23h6m2 0h6m2 0h6m2 0h6m2 0h4M4 24h6m2 0h6m2 0h6m2 0h6m2 0h4M4 25h6m2 0h6m2 0h6m2 0h6m2 0h4M4 26h6m2 0h6m2 0h6m2 0h6m2 0h4M4 27h6m2 0h6m2 0h6m2 0h6m2 0h4M4 28h6m2 0h6m2 0h6m2 0h6m2 0h4M4 29h6m2 0h6m2 0h6m2 0h6m2 0h4M4 30h6m2 0h6m2 0h6m2 0h6m2 0h4M4 31h6m2 0h6m2 0h6m2 0h6m2 0h4M4 32h6m2 0h6m2 0h6m2 0h6m2 0h4M4 33h6m2 0h6m2 0h6m2 0h6m2 0h4M4 34h6m2 0h6m2 0h6m2 0h6m2 0h4M4 35h6m2 0h6m2 0h6m2 0h6m2 0h4M4 36h6m2 0h6m2 0h6m2 0h6m2 0h4M4 37h6m2 0h6m2 0h6m2 0h6m2 0h4M4 38h6m2 0h6m2 0h6m2 0h6m2 0h4M4 39h6m2 0h6m2 0h6m2 0h6m2 0h4M4 40h6m2 0h6m2 0h6m2 0h6m2 0h4M4 41h6m2 0h6m2 0h6m2 0h6m2 0h4M4 42h6m2 0h6m2 0h6m2 0h6m2 0h4M4 43h6m2 0h6m2 0h6m2 0h6m2 0h4M4 44h6m2 0h6m2 0h6m2 0h6m2 0h4M4 45h6m2 0h6m2 0h6m2 0h6m2 0h4M4 46h6m2 0h6m2 0h6m2 0h6m2 0h4M4 47h6m2 0h6m2 0h6m2 0h6m2 0h4M4 48h6m2 0h6m2 0h6m2 0h6m2 0h4M4 49h6m2 0h6m2 0h6m2 0h6m2 0h4M4 50h6m2 0h6m2 0h6m2 0h6m2 0h4M4 51h6m2 0h6m2 0h6m2 0h6m2 0h4M4 52h6m2 0h6m2 0h6m2 0h6m2 0h4M4 53h6m2 0h6m2 0h6m2 0h6m2 0h4M4 54h6m2 0h6m2 0h6m2 0h6m2 0h4M4 55h6m2 0h6m2 0h6m2 0h6m2 0h4M4 56h4m2 0h6m2 0h6m2 0h6m2 0h6M4 57h4m2 0h6m2 0h6m2 0h6m2 0h6M4 58h36M4 59h36M4 60h36M4 61h36\"/>\n    </svg>\n    <span>Garbage</span>\n  </button>\n</section>\n","<script>\n  import { onMount } from \"svelte\";\n  let date = new Date();\n\n  const formatter = new Intl.DateTimeFormat(\"en\", {\n    hour12: true,\n    hour: \"numeric\",\n    minute: \"2-digit\",\n  });\n\n  const minutes = ('0'+date.getMinutes()).slice(-2);\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      date = new Date();\n    }, 1000);\n  });\n</script>\n\n<time datetime={date}>{formatter.format(date)}</time>\n","import Desktop from './Desktop.svelte';\nimport Clock from './Clock.svelte';\nimport Nav from './Nav.svelte';\n\nfunction replaceContents(node) {\n  node.innerHTML = '';\n  return node;\n}\n\nvar nav = new Nav({\n  target: replaceContents(document.querySelector('#nav')),\n});\n\nvar clock = new Clock({\n  target: replaceContents(document.querySelector('#clock')),\n});\n\nvar desktop = new Desktop({\n  target: replaceContents(document.querySelector('#desktop')),\n});\n\n\n\nexport default { clock, desktop, nav };\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","globals","window","globalThis","global","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","slot_ctx","left","top","dispatch","close","modal","moving","previously_focused","activeElement","focus","title","movementX","movementY","querySelectorAll","tabbable","n","tabIndex","shiftKey","preventDefault","windowMac","windowTrash","format","date","Date","formatter","Intl","DateTimeFormat","hour12","hour","minute","getMinutes","setInterval","replaceContents","innerHTML","nav","querySelector","clock","desktop"],"mappings":"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"}